{"version":3,"sources":["/home/undead404/projects/asteria-sw/src/graphql-queries/movies.graphql","/home/undead404/projects/asteria-sw/src/routes/home/Home.scss","webpack:///./src/routes/home/Home.scss?1835","/home/undead404/projects/asteria-sw/src/routes/home/Home.jsx","/home/undead404/projects/asteria-sw/src/utils/make-request.js","/home/undead404/projects/asteria-sw/src/actions/get-movies.js","/home/undead404/projects/asteria-sw/src/routes/home/index.jsx"],"names":["doc","kind","definitions","operation","name","value","variableDefinitions","directives","selectionSet","selections","arguments","loc","start","end","source","body","locationOffset","line","column","definitionRefs","findOperation","i","length","element","forEach","def","refs","Set","collectFragmentReferences","node","add","type","selection","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery","__webpack_require__","locals","root","container","error","content","insertCss","_getContent","_getCss","toString","_insertCss","options","_jsx","Home_Home","withStyles_default","Home_default","a","Object","es","state","movies","Home","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","react_default","Component","className","_ref","map","item","title","release","rating","src","media","find","alt","_ref2","makeRequest","query","_slicedToArray","requestHandler","receiveHandler","errorHandler","_ref3","regeneratorRuntime","mark","_callee","dispatch","getState","helpers","response","errorData","wrap","_context","prev","next","graphqlRequest","sent","abrupt","status","json","concat","http_status","message","t0","statusText","t1","stop","_x","_x2","_x3","apply","requestMovies","constants","receiveMovies","data","items","receiveMoviesError","action","_action","context","store","movies_graphql_default","chunks","component","home_jsx","Layout"],"mappings":"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","file":"home.c54733b3.chunk.js","sourcesContent":["\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"MoviesQuery\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"movies\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"items\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rating\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"release\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"cast\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"castName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"media\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"src\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"media\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"src\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":247}};\n    doc.loc.source = {\"body\":\"query MoviesQuery {\\n  movies {\\n    items {\\n      title\\n      rating\\n      release\\n      cast {\\n        castName\\n        name\\n        media {\\n          src\\n          type\\n        }\\n      }\\n      media {\\n        src\\n        type\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"MoviesQuery\"] = oneQuery(doc, \"MoviesQuery\");\n        \n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":root{--font-family-base:\\\"Segoe UI\\\",\\\"HelveticaNeue-Light\\\",sans-serif;--max-content-width:1000px;--screen-xs-min:480px;--screen-sm-min:768px;--screen-md-min:992px;--screen-lg-min:1200px}.qf4cd{padding-left:20px;padding-right:20px}._2ABq6{margin:0 auto;padding:0 0 40px;max-width:1000px;max-width:var(--max-content-width)}._3eTlM{color:red}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"root\": \"qf4cd\",\n\t\"container\": \"_2ABq6\",\n\t\"error\": \"_3eTlM\"\n};","\n    var content = require(\"!!../../../node_modules/css-loader/index.js??ref--5-rules-2!../../../node_modules/postcss-loader/lib/index.js??ref--5-rules-3!../../../node_modules/sass-loader/lib/loader.js!./Home.scss\");\n    var insertCss = require(\"!../../../node_modules/isomorphic-style-loader/lib/insertCss.js\");\n\n    if (typeof content === 'string') {\n      content = [[module.id, content, '']];\n    }\n\n    module.exports = content.locals || {};\n    module.exports._getContent = function() { return content; };\n    module.exports._getCss = function() { return content.toString(); };\n    module.exports._insertCss = function(options) { return insertCss(content, options) };\n    \n    // Hot Module Replacement\n    // https://webpack.github.io/docs/hot-module-replacement\n    // Only activated in browser context\n    if (module.hot && typeof window !== 'undefined' && window.document) {\n      var removeCss = function() {};\n      module.hot.accept(\"!!../../../node_modules/css-loader/index.js??ref--5-rules-2!../../../node_modules/postcss-loader/lib/index.js??ref--5-rules-3!../../../node_modules/sass-loader/lib/loader.js!./Home.scss\", function() {\n        content = require(\"!!../../../node_modules/css-loader/index.js??ref--5-rules-2!../../../node_modules/postcss-loader/lib/index.js??ref--5-rules-3!../../../node_modules/sass-loader/lib/loader.js!./Home.scss\");\n\n        if (typeof content === 'string') {\n          content = [[module.id, content, '']];\n        }\n\n        removeCss = insertCss(content, { replace: true });\n      });\n      module.hot.dispose(function() { removeCss(); });\n    }\n  ","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport withStyles from 'isomorphic-style-loader/lib/withStyles';\nimport style from './Home.scss';\n\n@withStyles(style)\n@connect(state => ({\n  error: state.movies.error,\n  movies: state.movies.movies,\n}))\nexport default class Home extends React.Component {\n  static propTypes = {\n    error: PropTypes.string,\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        rating: PropTypes.number.isRequired,\n        release: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n  static defaultProps = {\n    error: null,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error,\n      movies: props.movies,\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    return {\n      error: props.error,\n      movies: props.movies,\n    };\n  }\n\n  render() {\n    return (\n      <div className={style.root}>\n        <div className={style.container}>\n          <h1>Star Wars movies</h1>\n          <div>\n            {this.state.error && (\n              <div className={style.error}>{this.state.error}</div>\n            )}\n          </div>\n          <div>\n            {this.state.movies && this.state.movies.length > 0 ? (\n              this.state.movies.map(item => (\n                <article key={item.title}>\n                  <div>\n                    <h3>{item.title}</h3>\n                    <h5>{item.release}</h5>\n                  </div>\n                  <div>{item.rating}</div>\n                  <img\n                    src={item.media.find(media => media.type === 'image').src}\n                    alt={item.title}\n                  />\n                </article>\n              ))\n            ) : (\n              <p>No star wars yet.</p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// req wrapper\nexport default function makeRequest(\n  [requestHandler, receiveHandler, errorHandler],\n  query,\n) {\n  // Purpose of `modify` parameter is to modify data\n  // before passing it to receiveHandler\n  // If `modify` is string, the data is simply passed as\n  // {[modify]: data}\n  // If `modify` is function, the data is passed through it\n  // Otherwise, the data is not saved in store\n  return async (dispatch, getState, helpers) => {\n    dispatch(requestHandler());\n    try {\n      const response = await helpers.graphqlRequest({\n        query,\n      });\n      if (!response) {\n        return dispatch(errorHandler('500 Empty response from server!'));\n      }\n      if (response.status >= 400) {\n        try {\n          const errorData = await response.json();\n          return dispatch(\n            errorHandler(`${errorData.http_status} ${errorData.message}`),\n          );\n        } catch (error) {\n          return dispatch(\n            errorHandler(`${response.status} ${response.statusText}`),\n          );\n        }\n      }\n      return dispatch(receiveHandler(response));\n    } catch (err) {\n      return dispatch(errorHandler(err.message));\n    }\n  };\n}\n","import {\n  GET_MOVIES_REQUEST,\n  GET_MOVIES_SUCCESS,\n  GET_MOVIES_FAILURE,\n} from '../constants';\nimport moviesQuery from '../graphql-queries/movies.graphql';\nimport makeRequest from '../utils/make-request';\n\nfunction requestMovies() {\n  return {\n    type: GET_MOVIES_REQUEST,\n  };\n}\n\nfunction receiveMovies(response) {\n  return {\n    error: null,\n    movies: response.data.movies.items,\n    type: GET_MOVIES_SUCCESS,\n  };\n}\n\nfunction receiveMoviesError(error) {\n  return {\n    error,\n    type: GET_MOVIES_FAILURE,\n  };\n}\n\nexport default function getMovies() {\n  return makeRequest(\n    [requestMovies, receiveMovies, receiveMoviesError],\n    moviesQuery,\n  );\n}\n","import React from 'react';\nimport Home from './Home';\nimport Layout from '../../components/Layout';\nimport getMovies from '../../actions/get-movies';\n\nexport default async function action(context) {\n  const response = await context.store.dispatch(getMovies());\n  let data;\n  if (!response || !response.data) {\n    data = { movies: [] };\n  } else {\n    data = response.data;\n  }\n  if (!data || !data.movies) {\n    data = { movies: [] };\n  }\n  return {\n    title: 'Star Wars Saga',\n    chunks: ['home'],\n    component: (\n      <Layout>\n        <Home movies={data.movies.items} />\n      </Layout>\n    ),\n  };\n}\n"],"sourceRoot":""}